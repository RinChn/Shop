volumes:
  pg_shop:

services:
  # База данных PostgreSQL
  product_db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=shop
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    volumes:
      - pg_shop:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"
    networks:
      - marketplace

  # Приложение (Spring Boot)
  app:
    restart: always
    build: .
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - marketplace
    depends_on:
      - product_db
      - kafka
      - redis
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://product_db:5432/shop"
      EXCHANGE_SERVICE_URL: "http://exchange:8081"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379

  # Zookeeper для Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - marketplace

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_DOCKER://kafka:29092,PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_DOCKER://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - marketplace


  # Redis
  redis:
    image: redis:latest
    restart: always
    networks:
      - marketplace

networks:
  marketplace:
    external: true
